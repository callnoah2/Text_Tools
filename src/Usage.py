# Usage instructions and descriptions for each tool  	  	  
#  	  	  
# DO NOT EDIT THIS FILE  	  	  

#                         ,  	  	  
#                        (o)<  DuckieCorp Software License  	  	  
#                   .____//  	  	  
#                    \ <' )   Copyright (c) 2023 Erik Falor  	  	  
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  	  	  
#         TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION  	  	  
#  	  	  
# You may reproduce and distribute copies of the Work in any medium,  	  	  
# with or without modifications, provided that You meet the following  	  	  
# conditions:  	  	  
#  	  	  
#   (a) You must give any other recipients of the Work a copy of this  	  	  
#       License; and  	  	  
#   (b) You must cause any modified files to carry prominent notices  	  	  
#       stating that You changed the files; and  	  	  
#   (c) You must retain, in the Source form of the files that You  	  	  
#       distribute, all copyright, patent, trademark, and attribution  	  	  
#       notices from the Source form of the Work; and  	  	  
#   (d) You do not misuse the trade names, trademarks, service marks,  	  	  
#       or product names of the Licensor, except as required for  	  	  
#       reasonable and customary use of the source files.  	  	  


CAT = """tt.py cat|tac FILENAME...  	  	  
    Concatenate and print files in order or in reverse"""  	  	  

CUT = """tt.py cut [-f LIST] FILENAME...  	  	  
    Remove comma-separated sections from each line of files  	  	  
    -f  List of comma-separated integers indicating fields to output (default LIST=1)"""  	  	  

PASTE = """tt.py paste FILENAME...  	  	  
    Merge lines of files into one comma-separated text"""  	  	  

GREP = """tt.py grep [-v] PATTERN FILENAME...  	  	  
    Print lines of files matching PATTERN  	  	  
    -v  Invert matching; print lines which DO NOT match PATTERN"""  	  	  

HEAD = """tt.py head|tail [-n N] FILENAME...  	  	  
    Output the first or last part of files  	  	  
    -n  Number of lines to print (default N=10)"""  	  	  

SORT = """tt.py sort FILENAME...  	  	  
    Output lines of text file in sorted order"""  	  	  

WC = """tt.py wc FILENAME...  	  	  
    Print newline, word, and byte counts for each file"""  	  	  


def usage(error=None, tool=None):  	  	  
    """Provide a unified error reporting interface"""  	  	  
    # Print a specific error message, if requested  	  	  
    if error is not None:  	  	  
        print(f"Error: {error}\n")  	  	  

    # Print a tool-specific message where possible; otherwise, display  	  	  
    # instructions for all tools  	  	  
    if tool == 'cat' or tool == 'tac':  	  	  
        print(f"\t{CAT}")  	  	  
    elif tool == 'cut':  	  	  
        print(f"\t{CUT}")  	  	  
    elif tool == 'paste':  	  	  
        print(f"\t{PASTE}")  	  	  
    elif tool == 'grep':  	  	  
        print(f"\t{GREP}")  	  	  
    elif tool == 'head' or tool == 'tail':  	  	  
        print(f"\t{HEAD}")  	  	  
    elif tool == 'sort':  	  	  
        print(f"\t{SORT}")  	  	  
    elif tool == 'wc':  	  	  
        print(f"\t{WC}")  	  	  
    else:  	  	  
        print("Python Text Tools Usage:\n========================",  	  	  
              CAT, CUT, PASTE, GREP, HEAD, SORT, WC,  	  	  
              sep="\n\n", end="\n\n")  	  	  

    # Quit the program  	  	  
    exit(1)  	  	  
